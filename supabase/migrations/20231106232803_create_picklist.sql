create table "public"."picklist" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "teams" jsonb not null,
    "name" text not null,
    "created_by" uuid not null
);


alter table "public"."picklist" enable row level security;

CREATE UNIQUE INDEX picklist_pkey ON public.picklist USING btree (id);

alter table "public"."picklist" add constraint "picklist_pkey" PRIMARY KEY using index "picklist_pkey";

alter table "public"."picklist" add constraint "picklist_created_by_fkey" FOREIGN KEY (created_by) REFERENCES auth.users(id) not valid;

alter table "public"."picklist" validate constraint "picklist_created_by_fkey";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.set_created_by()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
BEGIN
  new.created_by = auth.uid();
  RETURN new;
END;$function$
;

create policy "Enable insert for authenticated users only"
on "public"."picklist"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."picklist"
as permissive
for select
to public
using (true);


create policy "allow any authenticated user to update a picklist"
on "public"."picklist"
as permissive
for update
to authenticated
using (true)
with check (true);


CREATE TRIGGER set_created_by_picklist BEFORE INSERT ON public.picklist FOR EACH ROW EXECUTE FUNCTION set_created_by();


